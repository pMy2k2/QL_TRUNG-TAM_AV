/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package main;

import com.mysql.cj.jdbc.CallableStatement;
import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

/**
 *
 * @author HAPPY
 */
public class Login_Frame extends javax.swing.JFrame {

    /**
     * Creates new form Login_Frame
     */
    public Login_Frame() {
        initComponents();
    }
    private static String loggedInUsername="";

    public static void setLoggedInUsername(String username) {
        loggedInUsername = username;
    }

    public static String getLoggedInUsername() {
        return loggedInUsername; //  
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dangnhap_login = new javax.swing.JButton();
        dangky_login = new javax.swing.JButton();
        huy_login = new javax.swing.JButton();
        user_login = new javax.swing.JTextField();
        pass_login = new javax.swing.JPasswordField();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Đăng nhập");
        setBackground(new java.awt.Color(255, 153, 153));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        dangnhap_login.setBackground(new java.awt.Color(123, 150, 212));
        dangnhap_login.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        dangnhap_login.setForeground(new java.awt.Color(255, 255, 255));
        dangnhap_login.setText("ĐĂNG NHẬP");
        dangnhap_login.setBorder(null);
        dangnhap_login.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dangnhap_loginActionPerformed(evt);
            }
        });
        dangnhap_login.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                dangnhap_loginKeyPressed(evt);
            }
        });
        getContentPane().add(dangnhap_login, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 550, 170, 50));

        dangky_login.setBackground(new java.awt.Color(37, 45, 77));
        dangky_login.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        dangky_login.setForeground(new java.awt.Color(255, 255, 255));
        dangky_login.setText("ĐĂNG KÝ");
        dangky_login.setBorder(null);
        dangky_login.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dangky_loginActionPerformed(evt);
            }
        });
        getContentPane().add(dangky_login, new org.netbeans.lib.awtextra.AbsoluteConstraints(1020, 659, 130, 50));

        huy_login.setBackground(new java.awt.Color(123, 150, 212));
        huy_login.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        huy_login.setForeground(new java.awt.Color(255, 255, 255));
        huy_login.setText("HUỶ");
        huy_login.setBorder(null);
        huy_login.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        huy_login.setRequestFocusEnabled(false);
        huy_login.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                huy_loginActionPerformed(evt);
            }
        });
        getContentPane().add(huy_login, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 550, 150, 50));

        user_login.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        user_login.setBorder(null);
        user_login.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                user_loginActionPerformed(evt);
            }
        });
        getContentPane().add(user_login, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 340, 360, 50));

        pass_login.setFont(new java.awt.Font("Segoe UI", 0, 19)); // NOI18N
        pass_login.setToolTipText("");
        pass_login.setBorder(null);
        pass_login.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pass_loginActionPerformed(evt);
            }
        });
        getContentPane().add(pass_login, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 450, 360, 50));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/bg_login.png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void pass_loginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pass_loginActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pass_loginActionPerformed

    private void user_loginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_user_loginActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_user_loginActionPerformed

    private void dangnhap_loginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dangnhap_loginActionPerformed
        // TODO add your handling code here:
        String username = user_login.getText();
        String password = new String(pass_login.getPassword());
        loggedInUsername = username;
        try {
            // Tạo kết nối đến cơ sở dữ liệu MySQL
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost/ql_lop_av", "root", "");

            // Sử dụng PreparedStatement để truy vấn cơ sở dữ liệu
            String query = "SELECT * FROM user WHERE username = ? AND password = ?";
            PreparedStatement statement = conn.prepareStatement(query);
            statement.setString(1, username);
            statement.setString(2, password);

            ResultSet result = statement.executeQuery();

            if (result.next()) {
                JOptionPane.showMessageDialog(Login_Frame.this, "Đăng nhập thành công!");
                // Gọi funtion để lấy số lượng học viên
                CallableStatement cs1 = (CallableStatement) conn.prepareCall("{? = call DemSoLuongHocVien()}");
                cs1.registerOutParameter(1, java.sql.Types.INTEGER);
                cs1.execute();
                int soLuongHocVien = cs1.getInt(1);

                // Gọi funtion để lấy số lượng giảng viên
                CallableStatement cs2 = (CallableStatement) conn.prepareCall("{? = call DemSoLuongGiangVien()}");
                cs2.registerOutParameter(1, java.sql.Types.INTEGER);
                cs2.execute();
                int soLuongGiangVien = cs2.getInt(1);

                // Gọi funtion để lấy số lượng khóa học
                CallableStatement cs3 = (CallableStatement) conn.prepareCall("{? = call DemSoLuongKhoaHoc()}");
                cs3.registerOutParameter(1, java.sql.Types.INTEGER);
                cs3.execute();
                int soLuongKhoaHoc = cs3.getInt(1);

                // Tạo một instance của Main_Frame
                Main_Frame main = new Main_Frame();

                // Cập nhật số lượng học viên, giảng viên và khóa học
                main.updateCounts(soLuongHocVien, soLuongGiangVien, soLuongKhoaHoc);

                main.updateClock();
                main.setVisible(true);
                this.setVisible(false);
            } else {
                JOptionPane.showMessageDialog(this, "Tên đăng nhập hoặc mật khẩu không đúng.", "Lỗi đăng nhập", JOptionPane.ERROR_MESSAGE);
            }

            conn.close();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Lỗi kết nối cơ sở dữ liệu: " + e.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
        }


    }//GEN-LAST:event_dangnhap_loginActionPerformed

    private void dangky_loginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dangky_loginActionPerformed
        Signup_JFrame sgF = new Signup_JFrame();
        sgF.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_dangky_loginActionPerformed

    private void huy_loginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_huy_loginActionPerformed
        // TODO add your handling code here:
        user_login.setText("");
        pass_login.setText("");
    }//GEN-LAST:event_huy_loginActionPerformed

    private void dangnhap_loginKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dangnhap_loginKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            // Xử lý đăng nhập khi người dùng ấn Enter ở đây
            String username = user_login.getText();
            String password = new String(pass_login.getPassword());

            try {
                // Tạo kết nối đến cơ sở dữ liệu MySQL
                Connection conn = DriverManager.getConnection("jdbc:mysql://localhost/ql_lop_av", "root", "");

                // Sử dụng PreparedStatement để truy vấn cơ sở dữ liệu
                String query = "SELECT * FROM user WHERE username = ? AND password = ?";
                PreparedStatement statement = conn.prepareStatement(query);
                statement.setString(1, username);
                statement.setString(2, password);

                ResultSet result = statement.executeQuery();

                if (result.next()) {
                    JOptionPane.showMessageDialog(Login_Frame.this, "Đăng nhập thành công!");
                    // Gọi funtion để lấy số lượng học viên
                    CallableStatement cs1 = (CallableStatement) conn.prepareCall("{? = call DemSoLuongHocVien()}");
                    cs1.registerOutParameter(1, java.sql.Types.INTEGER);
                    cs1.execute();
                    int soLuongHocVien = cs1.getInt(1);

                    // Gọi funtion để lấy số lượng giảng viên
                    CallableStatement cs2 = (CallableStatement) conn.prepareCall("{? = call DemSoLuongGiangVien()}");
                    cs2.registerOutParameter(1, java.sql.Types.INTEGER);
                    cs2.execute();
                    int soLuongGiangVien = cs2.getInt(1);

                    // Gọi funtion để lấy số lượng khóa học
                    CallableStatement cs3 = (CallableStatement) conn.prepareCall("{? = call DemSoLuongKhoaHoc()}");
                    cs3.registerOutParameter(1, java.sql.Types.INTEGER);
                    cs3.execute();
                    int soLuongKhoaHoc = cs3.getInt(1);

                    // Tạo một instance của Main_Frame
                    Main_Frame main = new Main_Frame();

                    // Cập nhật số lượng học viên, giảng viên và khóa học
                    main.updateCounts(soLuongHocVien, soLuongGiangVien, soLuongKhoaHoc);

                    main.updateClock();
                    main.setVisible(true);
                    this.setVisible(false);
                } else {
                    JOptionPane.showMessageDialog(this, "Tên đăng nhập hoặc mật khẩu không đúng.", "Lỗi đăng nhập", JOptionPane.ERROR_MESSAGE);
                }

                conn.close();
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(this, "Lỗi kết nối cơ sở dữ liệu: " + e.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_dangnhap_loginKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login_Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login_Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login_Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login_Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Login_Frame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton dangky_login;
    private javax.swing.JButton dangnhap_login;
    private javax.swing.JButton huy_login;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPasswordField pass_login;
    private javax.swing.JTextField user_login;
    // End of variables declaration//GEN-END:variables
}
